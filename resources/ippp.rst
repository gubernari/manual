IPPP Resources
--------------

Overview
~~~~~~~~

At IPPP, EOS collaboration members can use any of the following computing resources:

``login2``
  Login gateway to the IPPP infrastructure, do NOT use for any computations.

``ip3-ws16``
  AMD EPYC 74F3 (48Cores/96Threads) @ 3.2Ghz, 256GB RAM; exclusive to EOS collaboration members.


Storage
~~~~~~~

Please store large amounts of data, e.g. as generated by a Monte Carlo simulation, on the EOS group storage:

.. code-block:: none

   /mt/group-batch/eos-share/IPPPUSERNAME/


You might need to create this directory first. To run your analyses, it might be convenient to run

.. code-block:: bash

   export EOS_BASE_DIRECTORY=/mt/group-batch/eos-share/IPPPUSERNAME/ANALYSISNAME


Access
~~~~~~

.. note::

   Once your receive your IPPP credentials, please login once using your password only. You will be prompted to
   choose a new password. Please choose a strong password and do not forget it.
   Only setup your SSH key as documented below **after** your first login and successful password change.

Access is possible through SSH using your IPPP username (shown as ``USERNAME`` below) and password.
We recommend the following setup.

  1. If you have not yet, create a private/public SSH key pair for use between your local machine and the IPPP resources.
  (E.g. if you have a laptop and a desktop, create one pair for each.)
  It is recommended that you name the key pair files as ``id_LOCAL_ippp`` and ``id_LOCAL_ippp.pub``, where ``LOCAL`` is the name of your local machine.
  The key pair files should be stored in the ``~/.ssh`` directory.
  We recommend to use the following call to ``ssh-keygen``:

  .. code-block:: bash

	ssh-keygen -t rsa -b 4096 -C "LOCAL -> IPPP" -f ~/.ssh/id_LOCAL_ippp

  2. Copy the contents of the public key file ``id_LOCAL_ippp.pub`` into your ``~/.ssh/authorized_keys`` file on the IPPP resources.
  This can be done using the following call to ``ssh-copy-id``:

  .. code-block:: bash

	ssh-copy-id -i ~/.ssh/id_LOCAL_ippp.pub IPPPUSER@login2.phyip3.dur.ac.uk

  where ``LOCAL`` is the name of your local machine.

  3. If not present, create a ``~/.ssh/config`` file on your local machine and add the following lines to it:

  .. code-block:: text

	Host ip3-login2
		Hostname login2.phyip3.dur.ac.uk
		User IPPPUSERNAME
		IdentityFile ~/.ssh/id_LOCAL_ippp

	Host ip3-ws16
		HostName ip3-ws16.phyip3.dur.ac.uk
		ProxyCommand ssh ip3-login2 -W %h:%p
		User IPPPUSERNAME
		IdentityFile ~/.ssh/id_LOCAL_ippp

  4. You can now use ``ip3-ws16`` in lieu of the full hostname ``ip3-ws16.phyip3.dur.ac.uk``.
  Connecting to ``ip3-ws16`` is now as simple as typing ``ssh ip3-ws16`` on your local computer.
  Copying files to the IPPP system can be achieved by using ``scp LOCALFILE ip3-login2:REMOTEFILE``.

Access for Windows users
~~~~~~~~~~~~~~~~~~~~~~~~

The procedure for Windows users is similar to the one described above
with the following differences in points 2. and 3.:

  2. The command to the contents of the public key file ``id_LOCAL_ippp.pub``
  into your ``~/.ssh/authorized_keys`` file on the IPPP resources is

  .. code-block:: bash

     type $env:USERPROFILE\.ssh\id_LOCAL_ippp.pub | ssh IPPPUSER@login2.phyip3.dur.ac.uk "cat >> .ssh/authorized_keys"

  3. The IdentityFile path should be adjusted to its actual location on your Windows machine

If when connecting to ``ip3-login2`` or ``ip3-ws16`` still asks you for your password
you might have to run the following commang after connecting to ``ip3-login2``:

.. code-block:: bash

   chmod -R 700 ~/.ssh



Setup
~~~~~

With ``ip3-ws16`` we have an up-to-date computing environment based on RedHat Enterprise Linux 9.
The specific distribution is called `Rocky Linux 9 <https://rockylinux.org/>`_.

  - Install the following Python packages into your home directory:

  .. code-block:: bash

    pip3.9 install \
      --user dynesty matplotlib networkx numpy pypmc scipy wilson \
      jupyter nbconvert pandoc pyyaml \
      sphinx sphinx-argparse sphinx-rtd-theme sphinxcontrib-contentui nbsphinx


  - ``EOS`` should be installed from source by following the instructions given `here <https://eos.github.io/doc/installation.html#installing-eos>`_.
    When installing EOS from source, use the following ``configure`` call instead:

  .. code-block:: bash

    ./configure \
      --prefix=$HOME/.local \
      --with-boost-python-suffix=39

